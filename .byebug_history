c
@current_user.orders
order
c
@current_user.orders.find(244)c
@current_user.orders.find(244)
@current_user
params
c
params
prams
order_id
c
n
order =@current_user.orders.find(params[:id])
@current_user.orders.find(params[:id])
order
c
nc
n
order
order.id
c
order
c
n
order
c
n
:restaurent_id
restaurent_id
c
n
params
c
@current_user
c
Dish.category_id
category_id
params
dish_params
category
restaurant
dish
c
params
restaurant
c
n
c
@user.cart
@user
c
dish.id
dish
n
id: dish.id
dish.id
dish
c
@current_user.dishes
@current_user
c
n
v
c
n
request
requests
"Bearer #{@token}"
"Bearer #{@token}""
@token
c
n
@category
@user.type
@restaurant
@token
@user
c
@user
c
User.find(756)
restaurent.user_id.data
restaurent.user_id.inspect
restaurent.user_id
user_id
restauent.user_id
restaurent
restaurnt
c
n
c
@user
c
restaurent
exit
esxit
restaurent.id
@user
c
@user.restaurents.create(name: 'Test restaurent', status: 'open', place: 'indore') 
@user.restaurents
@user
:restaurent
restaurent
c
response
post :create, params: { restaurent: { name: nil, place: 'New Place', status: 'open' } }
c
@user
c
@current_user.customer?
restaurent
c
@user
c
@current_user.restaurents
restaurent
c
n
restaurent
@current_user.restaurents.paginate(page: params[:page], per_page: 1)
restaurent
@current_user
c
@user
c
n
c
n
c
@user
c
@user
user
@user
user
@user
user
exit
@user
exit
@user
c
@user
c
@user
exit
c
@user
exit
@user
exit
clear
@user
c
n
restaurnet
exit
restaurnet
@user
:restaurent
restaurent
c
c\
c
n
restaurent = @current_user.restaurents.paginate(page: params[:page], per_page: 1)
restaurent
c
n
response
n
post :create, params: { restaurent: { name: 'New restaurent', place: 'New Place', status: 'open' } }
params
restaurent
c
exit
@user
c
n
restaurent
@current_user.restaurents
@current_user
restaurent
n
exit
exir
exuit
n
@current_user
exit
c
n
@user
@token
exit
c
n
expect(@user.name).to eq('Updated Name')
expect(@user.name).to eq('Updated Name'
CCexpect(@user.name).to eq('Updated Name')
n
@user.reload
n
@user.name
name
nbame
params
patch :update, params: { id: @user.id, user: { name: 'updated_name' } }
n
@user
@token
c
if @current_user.destroy
if @current_user.destroy!
if @current_user.destroy?
if @current_user.destroy
c
n
@current_user
user_params
c
@user.id
c
@token = generate_jwt_token(@user.id)
@token
c
@current_user
c
@token
n
@token
@user
exit
@user
exit
c
generate_jwt_token(subject.id)
@token
c
n
subject.email
subject.name
subject
subject.inspect
subject.to_s
subject
subject.name
subject.user
subject
exit
c
subject.icc
subject.id
